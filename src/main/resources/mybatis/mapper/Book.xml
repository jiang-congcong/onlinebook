<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cn.book.dao.BookDAO">

    <select id="queryBookList" parameterType="java.util.Map" resultType="java.util.Map">
        select
        distinct
        t1.book_name name,
        t1.book_id bookId,
        t1.book_price price,
        t1.book_introduce introduce,
        t3.catg_name type,
        t5.sku_total stockTotal,
        t5.sku_sale stockSale,
        t6.picture_url image,
        t1.valid_state validState
        from
        t_book t1
        left join t_catg_book_relation t2 on t1.book_id = t2.book_id and t2.valid_state = '1'
        left join t_catg t3 on t2.catg_id = t3.catg_id and t3.valid_state = '1'
        left join t_sku_book_relation t4 on t1.book_id = t4.book_id and t4.valid_state = '1'
        left join t_sku t5 on t4.sku_id = t5.sku_id and t5.valid_state = '1'
        left join t_picture t6 on t1.book_id = t6.book_id and t6.valid_state = '1'
        left join t_shop_user_book_relation t7 on t1.book_id = t7.book_id and t7.valid_state = '1'
        <where>
        <if test="validState != null and validState !=''">
            t1.valid_state = #{validState}
        </if>
        <if test="validStateList != null and validStateList !=''">
            t1.valid_state in ${validStateList}
        </if>
        <if test="key != null and key != ''">
            and t1.`book_name` like concat('%',#{key},'%')
        </if>
        <if test="name != null and name != ''">
             and t1.`book_name` like concat('%',#{name},'%')
        </if>
        <if test="type != null and type != ''">
            and t3.`catg_name` like concat('%',#{type},'%')
        </if>
        <if test="catgId != null and catgId != ''">
            and t3.`catg_id` like concat('%',#{catgId},'%')
        </if>
        <if test="minPrice != null and minPrice != '' and maxPrice != null and maxPrice != ''">
            and t1.book_price between #{minPrice} and #{maxPrice}
        </if>
        <if test="bookId != null and bookId != ''">
            and t1.book_id = #{bookId}
        </if>
        <if test="useId != null and useId != ''">
            and t7.user_id = #{useId}
        </if>
        order by
        <if test="minPrice != null and minPrice != '' and maxPrice != null and maxPrice != ''">
            t1.book_price ${order} ,
        </if>
        <if test="order != null and order != ''">
            t1.book_price ${order} ,
        </if>
        t1.book_id DESC
        limit ${start} , ${limit}
        </where>

    </select>


    <select id="queryBookListTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
        count(distinct t1.book_id) total
        from
        t_book t1
        left join t_catg_book_relation t2 on t1.book_id = t2.book_id and t2.valid_state = '1'
        left join t_catg t3 on t2.catg_id = t3.catg_id and t3.valid_state = '1'
        left join t_sku_book_relation t4 on t1.book_id = t4.book_id and t4.valid_state = '1'
        left join t_sku t5 on t4.sku_id = t5.sku_id and t5.valid_state = '1'
        left join t_picture t6 on t1.book_id = t6.book_id and t6.valid_state = '1'
        left join t_shop_user_book_relation t7 on t1.book_id = t7.book_id and t7.valid_state = '1'
        <where>
            <if test="validState != null and validState !=''">
                t1.valid_state = #{validState}
            </if>
            <if test="validStateList != null and validStateList !=''">
                t1.valid_state in ${validStateList}
            </if>
            <if test="key != null and key != ''">
                and t1.`book_name` like concat('%',#{key},'%')
            </if>
            <if test="name != null and name != ''">
                and t1.`book_name` like concat('%',#{name},'%')
            </if>
            <if test="type != null and type != ''">
                and t3.`catg_name` like concat('%',#{type},'%')
            </if>
            <if test="minPrice != null and minPrice != '' and maxPrice != null and maxPrice != ''">
                and t1.book_price between #{minPrice} and #{maxPrice}
            </if>
            <if test="bookId != null and bookId != ''">
                and t1.book_id = #{bookId}
            </if>
            <if test="useId != null and useId != ''">
                and t7.user_id = #{useId}
            </if>
        </where>
    </select>

    <select id="queryAllCatgId" resultType="java.util.Map">
        select
        distinct
        catg_id catgId,
        catg_name catgName
        from t_catg
        where
        valid_state = '1'
    </select>

    <select id="queryBookImageSmall" parameterType="java.lang.String" resultType="java.lang.String">
        select
        distinct
        picture_url imageSmall
        from t_book_image_small
        where
        book_id = #{bookId}
        and valid_state = '1'
    </select>
    
    <select id="queryBookBigPic" parameterType="java.lang.String" resultType="java.lang.String">
        select
        distinct
        picture_url bigPic
        from t_book_big_picture
        where
        book_id = #{bookId}
        and valid_state = '1'
    </select>

    <insert id="addBook" parameterType="java.util.Map">
        insert into
        t_book(`book_id`,`book_name`,`book_price`,`book_catg_id`,`book_introduce`,`book_shop_id`,`book_shop_name`,`book_sku_id`,`valid_state`,`book_create_time`,`book_create_user_id`)
        values
        (#{bookId},#{bookName},#{bookPrice},#{catgId},#{describe},#{shopId},#{shopName},#{skuId},#{validState},NOW(),#{userId})
    </insert>

    <update id="updateBookInfo" parameterType="java.util.Map">
        update
        t_book
        set
        book_name = #{bookName},
        book_price = #{bookPrice},
        book_introduce = #{describe},
        valid_state = #{validState},
        book_modf_user_id = #{userId},
        book_modf_time = NOW()
        where
        book_id = #{bookId}
        and valid_state in ('0','1')
    </update>

    <insert id="insertBookSku" parameterType="java.util.Map">
        insert into
        t_sku(`sku_id`,`sku_total`,`sku_sale`,`valid_state`,`sku_create_user_id`,`sku_create_time`,`version`)
        values
        (#{skuId},#{skuTotal},#{skuSale},#{validState},#{userId},NOW(),#{version})
    </insert>

    <insert id="insertBookSkuRl" parameterType="java.util.Map">
        insert into
        t_sku_book_relation(`book_id`,`sku_id`,`valid_state`,`create_user_id`,`create_time`)
        values
        (#{bookId},#{skuId},#{validState},#{userId},NOW())
    </insert>

    <insert id="insertBookPicture" parameterType="java.util.Map">
        insert into
        t_picture(`book_id`,`picture_id`,`picture_url`,`valid_state`,`create_time`,`create_user_id`)
        values
        (#{bookId},#{pictureId},#{pictureUrl},#{validState},NOW(),#{userId})
    </insert>

    <insert id="insertBigBookPicture" parameterType="java.util.Map">
        insert into
        t_book_big_picture(`book_id`,`picture_id`,`picture_url`,`valid_state`,`create_time`,`create_user_id`)
        values
        (#{bookId},#{pictureId},#{pictureUrl},#{validState},NOW(),#{userIs})
    </insert>

    <insert id="insertBookSmall" parameterType="java.util.Map">
        insert into
        t_book_image_small(`book_id`,`picture_id`,`picture_url`,`valid_state`,`create_time`,`create_user_id`)
        values
        (#{bookId},#{pictureId},#{pictureUrl},#{validState},NOW(),#{userIs})
    </insert>

    <insert id="insertBookShopRL" parameterType="java.util.Map">
        insert into
        t_shop_user_book_relation(`shop_id`,`book_id`,`user_id`,`valid_state`,`create_time`)
        values
        (#{shopId},#{bookId},#{userId},#{validState},NOW())
    </insert>

    <insert id="insertBookCatgRL" parameterType="java.util.Map">
        insert into
        t_catg_book_relation(`book_id`,`catg_id`,`valid_state`,`create_user_id`,`create_time`)
        values
        (#{bookId},#{catgId},#{validState},#{userId},NOW())
    </insert>
    
    <update id="operateBookValidState" parameterType="java.util.List">
        update
        t_book
        set
        valid_state = #{reqMap.validState},
        book_modf_user_id = #{reqMap.userId},
        book_modf_time = NOW()
        where
        book_id in
        <foreach collection="mcdsIdList" item="bookId" open="(" close=")" separator=",">
            #{bookId}
        </foreach>
        and valid_state in ('0','1')
    </update>

    <update id="updatePicValidState" parameterType="java.util.Map">
        update
        ${table}
        set
        valid_state = #{validState},
        modf_user_id = #{userId},
        modf_time = NOW()
        where
        book_id in
        <foreach collection="bookIdList" separator="," item="bookId" open="(" close=")">
            #{bookId}
        </foreach>
        and valid_state = '1'
    </update>

    <select id="queryAllCatg" resultType="java.util.Map">
        select
        distinct
        catg_id catgId,
        catg_name name
        from
        t_catg
        where
        valid_state = '1'
    </select>





</mapper>